/**
 * generated by Xtext 2.20.0
 */
package org.xtext.example.dslproject.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.dslproject.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DslprojectFactoryImpl extends EFactoryImpl implements DslprojectFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static DslprojectFactory init()
  {
    try
    {
      DslprojectFactory theDslprojectFactory = (DslprojectFactory)EPackage.Registry.INSTANCE.getEFactory(DslprojectPackage.eNS_URI);
      if (theDslprojectFactory != null)
      {
        return theDslprojectFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new DslprojectFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DslprojectFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case DslprojectPackage.MODEL: return createModel();
      case DslprojectPackage.AGENT: return createAgent();
      case DslprojectPackage.INTENT: return createIntent();
      case DslprojectPackage.ENTITY: return createEntity();
      case DslprojectPackage.QUESTION_REF: return createQuestionRef();
      case DslprojectPackage.QUESTION: return createQuestion();
      case DslprojectPackage.SUPER_QUESTION: return createSuperQuestion();
      case DslprojectPackage.QUESTION_ENTITY: return createQuestionEntity();
      case DslprojectPackage.TRAINING: return createTraining();
      case DslprojectPackage.TRAINING_REF: return createTrainingRef();
      case DslprojectPackage.TRAINING_INPUT: return createTrainingInput();
      case DslprojectPackage.DECLARATION: return createDeclaration();
      case DslprojectPackage.ENTITY_EXAMPLE: return createEntityExample();
      case DslprojectPackage.SYSVARIABLE: return createSysvariable();
      case DslprojectPackage.REFERENCE: return createReference();
      case DslprojectPackage.FOLLOW_RELATION: return createFollowRelation();
      case DslprojectPackage.SIN: return createSin();
      case DslprojectPackage.DECL: return createDecl();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Model createModel()
  {
    ModelImpl model = new ModelImpl();
    return model;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Agent createAgent()
  {
    AgentImpl agent = new AgentImpl();
    return agent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Intent createIntent()
  {
    IntentImpl intent = new IntentImpl();
    return intent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Entity createEntity()
  {
    EntityImpl entity = new EntityImpl();
    return entity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QuestionRef createQuestionRef()
  {
    QuestionRefImpl questionRef = new QuestionRefImpl();
    return questionRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Question createQuestion()
  {
    QuestionImpl question = new QuestionImpl();
    return question;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SuperQuestion createSuperQuestion()
  {
    SuperQuestionImpl superQuestion = new SuperQuestionImpl();
    return superQuestion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public QuestionEntity createQuestionEntity()
  {
    QuestionEntityImpl questionEntity = new QuestionEntityImpl();
    return questionEntity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Training createTraining()
  {
    TrainingImpl training = new TrainingImpl();
    return training;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TrainingRef createTrainingRef()
  {
    TrainingRefImpl trainingRef = new TrainingRefImpl();
    return trainingRef;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TrainingInput createTrainingInput()
  {
    TrainingInputImpl trainingInput = new TrainingInputImpl();
    return trainingInput;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Declaration createDeclaration()
  {
    DeclarationImpl declaration = new DeclarationImpl();
    return declaration;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EntityExample createEntityExample()
  {
    EntityExampleImpl entityExample = new EntityExampleImpl();
    return entityExample;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sysvariable createSysvariable()
  {
    SysvariableImpl sysvariable = new SysvariableImpl();
    return sysvariable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Reference createReference()
  {
    ReferenceImpl reference = new ReferenceImpl();
    return reference;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FollowRelation createFollowRelation()
  {
    FollowRelationImpl followRelation = new FollowRelationImpl();
    return followRelation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Sin createSin()
  {
    SinImpl sin = new SinImpl();
    return sin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Decl createDecl()
  {
    DeclImpl decl = new DeclImpl();
    return decl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DslprojectPackage getDslprojectPackage()
  {
    return (DslprojectPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static DslprojectPackage getPackage()
  {
    return DslprojectPackage.eINSTANCE;
  }

} //DslprojectFactoryImpl
