/**
 * generated by Xtext 2.20.0
 */
package org.xtext.example.dslproject.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.dslproject.DslprojectPackage;
import org.xtext.example.dslproject.Question;
import org.xtext.example.dslproject.QuestionRef;
import org.xtext.example.dslproject.SuperQuestion;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Question Ref</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.dslproject.impl.QuestionRefImpl#getQuestion <em>Question</em>}</li>
 *   <li>{@link org.xtext.example.dslproject.impl.QuestionRefImpl#getSuperQuestion <em>Super Question</em>}</li>
 * </ul>
 *
 * @generated
 */
public class QuestionRefImpl extends MinimalEObjectImpl.Container implements QuestionRef
{
  /**
   * The cached value of the '{@link #getQuestion() <em>Question</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuestion()
   * @generated
   * @ordered
   */
  protected Question question;

  /**
   * The cached value of the '{@link #getSuperQuestion() <em>Super Question</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSuperQuestion()
   * @generated
   * @ordered
   */
  protected SuperQuestion superQuestion;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QuestionRefImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return DslprojectPackage.Literals.QUESTION_REF;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Question getQuestion()
  {
    return question;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetQuestion(Question newQuestion, NotificationChain msgs)
  {
    Question oldQuestion = question;
    question = newQuestion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslprojectPackage.QUESTION_REF__QUESTION, oldQuestion, newQuestion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQuestion(Question newQuestion)
  {
    if (newQuestion != question)
    {
      NotificationChain msgs = null;
      if (question != null)
        msgs = ((InternalEObject)question).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslprojectPackage.QUESTION_REF__QUESTION, null, msgs);
      if (newQuestion != null)
        msgs = ((InternalEObject)newQuestion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslprojectPackage.QUESTION_REF__QUESTION, null, msgs);
      msgs = basicSetQuestion(newQuestion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslprojectPackage.QUESTION_REF__QUESTION, newQuestion, newQuestion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public SuperQuestion getSuperQuestion()
  {
    return superQuestion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSuperQuestion(SuperQuestion newSuperQuestion, NotificationChain msgs)
  {
    SuperQuestion oldSuperQuestion = superQuestion;
    superQuestion = newSuperQuestion;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, DslprojectPackage.QUESTION_REF__SUPER_QUESTION, oldSuperQuestion, newSuperQuestion);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSuperQuestion(SuperQuestion newSuperQuestion)
  {
    if (newSuperQuestion != superQuestion)
    {
      NotificationChain msgs = null;
      if (superQuestion != null)
        msgs = ((InternalEObject)superQuestion).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - DslprojectPackage.QUESTION_REF__SUPER_QUESTION, null, msgs);
      if (newSuperQuestion != null)
        msgs = ((InternalEObject)newSuperQuestion).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - DslprojectPackage.QUESTION_REF__SUPER_QUESTION, null, msgs);
      msgs = basicSetSuperQuestion(newSuperQuestion, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, DslprojectPackage.QUESTION_REF__SUPER_QUESTION, newSuperQuestion, newSuperQuestion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case DslprojectPackage.QUESTION_REF__QUESTION:
        return basicSetQuestion(null, msgs);
      case DslprojectPackage.QUESTION_REF__SUPER_QUESTION:
        return basicSetSuperQuestion(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case DslprojectPackage.QUESTION_REF__QUESTION:
        return getQuestion();
      case DslprojectPackage.QUESTION_REF__SUPER_QUESTION:
        return getSuperQuestion();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case DslprojectPackage.QUESTION_REF__QUESTION:
        setQuestion((Question)newValue);
        return;
      case DslprojectPackage.QUESTION_REF__SUPER_QUESTION:
        setSuperQuestion((SuperQuestion)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case DslprojectPackage.QUESTION_REF__QUESTION:
        setQuestion((Question)null);
        return;
      case DslprojectPackage.QUESTION_REF__SUPER_QUESTION:
        setSuperQuestion((SuperQuestion)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case DslprojectPackage.QUESTION_REF__QUESTION:
        return question != null;
      case DslprojectPackage.QUESTION_REF__SUPER_QUESTION:
        return superQuestion != null;
    }
    return super.eIsSet(featureID);
  }

} //QuestionRefImpl
